/*
public class RandomListNode {
    int label;
    RandomListNode next = null;
    RandomListNode random = null;

    RandomListNode(int label) {
        this.label = label;
    }
}
*/
public class Solution {
    public RandomListNode Clone(RandomListNode pHead)
    {
        if(pHead==null)
            return null;
        
        //在每个结点之后复制一个相同的结点
        
        RandomListNode p = pHead;
        while(p!=null){
            RandomListNode q = new RandomListNode(p.label);
            q.next=p.next;
            p.next=q;
            p=q.next;
        }
        
        //给复制的结点的随机指针赋值
        
        p = pHead;
        while(p!=null){
            RandomListNode clone = p.next;
            if(p.random!=null)
                clone.random = p.random.next;
            p = clone.next;
        }
        
        //拆分
        
        RandomListNode qHead = pHead.next;
        p = pHead;
        while(p.next!=null){
            RandomListNode t = p.next;
            p.next=t.next;
            p=t;
        }
        
        return qHead;
    }
}