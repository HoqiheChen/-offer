import java.util.ArrayList;
import java.util.Stack;
/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    private ArrayList<ArrayList<Integer>> result = new ArrayList<>();
    private ArrayList<Integer> path = new ArrayList<Integer>();
    public ArrayList<ArrayList<Integer>> FindPath(TreeNode root,int target) {
        find(root,target,new ArrayList<>());
        return result;
    }
    public void find(TreeNode root,int target,ArrayList<Integer> path){
        if(root==null) return;
        path.add(root.val);
        target = target-root.val;
        if(root.left==null&&root.right==null){
            if(target==0){
                result.add(new ArrayList<>(path));
            }
        }
        else{
            if(root.left!=null)
                find(root.left,target,path);
            if(root.right!=null)
                find(root.right,target,path);
        }
        path.remove(path.size()-1);
    }
}