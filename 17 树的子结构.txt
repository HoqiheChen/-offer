/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    
    public boolean HasSubtree(TreeNode root1,TreeNode root2) {
        boolean result=false;
        if(root1==null||root2==null)
            return false;
        if(root1.val==root2.val){
            result=isSub(root1,root2);
        }
        if(!result){
            result=HasSubtree(root1.left,root2);
        }
        if(!result){
            result=HasSubtree(root1.right,root2);
        }
      return result;
    }
    //用来判断根节点相同的两个子树是不是相同
    public boolean isSub(TreeNode tree1,TreeNode tree2){
       if(tree2==null) return true;
       else if(tree1==null) return false;
       else if(tree1!=null&&tree2!=null){
           if(tree1.val!=tree2.val) return false;
           return isSub(tree1.left,tree2.left)&&isSub(tree1.right,tree2.right);
       }
        return false;
    }
}